[
    {
      "id": "sock-radio",
      "title": "SOCK Radio",
      "portPic": "./pics/sock/sock-logov2-01.png",
      "alt": "secondary sock radio logo (cloud with yellow, red, and blue quarter-circles emitting beneath)",
      "style": "dual",
      "colors": {
        "backing": "#f5ecba",
        "button": "#f71616",
        "shadow": "#d91e1e",
        "hover": "#ff0000"
      },
      "detail": [
        {
          "id": "intro",
          "type": "left",
          "caption": "<a class='hyper' href='https://sock.rocks' rel='noopener noreferrer' target='_blank'>SOCK Radio</a> is a quarantine project started by myself and a close friend. After launching the website, we grew to have weekly shows from six different people throughout the summer of 2020. The channel has recently returned, and has been a great source of learning for me in terms of website design, React, and other web-dev areas.",
          "image": "../pics/sock/sockLogo01.png",
          "alt": "SOCK radio logo"
        },
        {
          "id": "old-site",
          "type": "title",
          "title": "Original Website"
        },
        {
          "id": "slideshow",
          "type": "video",
          "caption": "Above are the pages for the original SOCK Radio website, which was very simple and built with the classic HTML-CSS-JS combo. Early on we recognized many drawbacks of this system, especially in terms of the stream player and listener experience.",
          "video": "../pics/sock/sockSlideshow.mp4",
          "controls": false,
          "autoplay": true,
          "loop": true,
          "alt": "slideshow of original website pages"
        },
        {
          "id": "redesign",
          "type": "title",
          "title": "Redesign"
        },
        {
          "id": "new-slideshow",
          "type": "video",
          "caption": "Here are the same pages, with the redesign (this can also be seen by visiting the website). Ultimately, I found the previous design too dark and uninviting, and wanted something a little more interesting and user friendly. We added a live chat for listeners, which has turned out to be an excellent addition, and the stream player is much more functional now. The site will continue to be updated throughout the year as we return to more of our programming.",
          "video": "../pics/sock/newSlideshow.mp4",
          "controls": false,
          "autoplay": true,
          "loop": true,
          "alt": "slideshow of 3 main pages of sock radio redesign"
        },
        {
          "id": "live-functionality",
          "type": "video",
          "caption": "This video demonstrates the newer player functionality, a small but important change that means the site notifies people when the stream has gone online. The end of the video also shows the button switching back to offline when the stream has ended.",
          "video": "../pics/sock/sockExample.mp4",
          "controls": false,
          "autoplay": true,
          "loop": true,
          "alt": "stream button going live"
        }
      ]
    },

    {
      "id": "apps",
      "title": "Android Apps",
      "portPic": "../pics/apps/apps.png",
      "alt": "both apps next to each other",
      "style": "dual",
      "colors": {
        "backing": "#d2aeeb",
        "button": "#9327db",
        "shadow": "#7f2ab8",
        "hover": "#a438ec"
      },
      "detail": [
        {
          "id": "intro",
          "type": "singleImg",
          "class": "single-image",
          "caption": "I built these two apps for a Mobile App Design course, and was pleased with how they turned out. More importantly, it gave me a solid understanding of building an app in the Android architecture, as well as shoring up my knowledge of Java. Both apps used a variety of data structures and methods for running API calls to display data to the user.",
          "image": "../pics/apps/apps-home.png",
          "alt": "The two apps side-by-side"
        },
        {
          "id": "knowyourgovernment",
          "type": "title",
          "title": "Know Your Government"
        },
        {
          "id": "gov-overview",
          "type": "doubleImg",
          "class": "double bg-portrait",
          "caption1": "This app takes note of the user's location, then displays a list of the government officials who represent them using Google's Civic Information API. In this image, the location is Chicago, and the list is ordered by the scope of the position with highest first. The user can also input any location of their choosing via zipcode or city name, allowing them to see the representatives for that area.",
          "caption2": "Here is an example of the detail provided when the user clicks on a representative. In this case, it is Senator Dick Durbin, and the app displays his photo along with a corresponding party image with the contact information below. Social media links are only displayed if they exist in the API.",
          "left": "../pics/apps/gov01.PNG",
          "right": "../pics/apps/gov02.PNG",
          "alt1": "list of government officials in app once location entered",
          "alt2": "detail view of dick durbin in app"
        },
        {
          "id": "gov-final",
          "type": "video",
          "caption": "Using the app. The initial location is mine, in Chicago, and the search function is then used to switch to Austin, Texas. Also shown are the different colorations for Democratic, Republican, and nonpartisan officials.",
          "video": "../pics/apps/gov-vid.mp4",
          "controls": false,
          "autoplay": true,
          "loop": true,
          "alt": "app in use, showing multiple officials from two locations"
        },
        {
          "id": "newsgateway",
          "type": "title",
          "title": "News Gateway"
        },
        {
          "id": "news-overview",
          "type": "doubleImg",
          "class": "double bg-portrait",
          "caption1": "The News Gateway app uses NewsAPI to display snippets about articles from various sources, along with the links to those articles. It can then sort by genre of publisher. The app accesses the API data in a separate thread, then uses a service to collect the articles from the requested source.",
          "caption2": "Here the genre selection is shown, which shortens the drawer list to relevant sources of news. In this case, the selection has already been made for the Entertainment category. This is also done in a separate thread, which re-downloads the source list from the API for that genre only.",
          "left": "../pics/apps/news01.PNG",
          "right": "../pics/apps/news02.PNG",
          "alt1": "news app homepage",
          "alt2": "news app with entertainment selected and genre menu open"
        },
        {
          "id": "news-final",
          "type": "video",
          "caption": "Example of using the app. Genre selection and article viewpages are shown, along with the ability to click on any of the article content to open a link to the original source.",
          "video": "../pics/apps/news-vid.mp4",
          "controls": false,
          "autoplay": true,
          "loop": true,
          "alt": "news app in use, genre set to tech and articles shown"
        }
      ]
    },

    {
      "id": "ipro",
      "title": "Campus Bike Lock",
      "portPic": "./pics/ipro/prototype-bike.jpg",
      "alt": "pic of foam bike with prototype lock",
      "style": "dual",
      "colors": {
        "backing": "#cdedca",
        "button": "#75db53",
        "shadow": "#5aa840",
        "hover": "#86ec64"
      },
      "detail": [
        {
          "id": "intro",
          "type": "singleImg",
          "class": "single-image shadow",
          "caption": "This prototype bike lock was designed and built for an interprofessional project course, with the ultimate goal being a way to improve the bicycle facilities on campus. The lock used RFID scanning so students would be able to use their IIT ID cards to lock and unlock them, removing the need for them to carry a bike lock to campus. We also designed it to be as strong or stronger than a lock that could be carried with you in order to ensure safety was not compromised.",
          "image": "../pics/ipro/prototype-bike.jpg",
          "alt": "pic of foam bike with prototype lock"
        },
        {
          "id": "design",
          "type": "title",
          "title": "Design"
        },
        {
          "id": "3d",
          "type": "doubleImg",
          "class": "double bg",
          "caption1": "Our initial design was a simple post with a metal bar that would enclose the bike, shown in this mockup. However, we decided against this and moved to a heavy chain, due to size variations in bicycles and the space required for a hinged metal bar opening. Also in this image the front wheel is not secured, something we addressed in later designs.",
          "caption2": "This is a CAD representation of the prototype that was to be laser cut from medium MDF. The additional extensions at the bottom were for adding wheel locking capability. Ideally, we wanted to be able to lock both wheels with one chain, but these bike locks would also mean people could secure their front wheel with their own cable lock, removing the need to bring a heavy U-lock.",
          "left": "../pics/ipro/model.png",
          "right": "../pics/ipro/lock-cad.PNG",
          "leftAlt": "3d mockup of early design with hinged arm",
          "rightAlt": "CAD model of prototype body"
        },
        {
          "id": "me",
          "type": "singleImg",
          "class": "single-image shadow",
          "caption": "My involvement was primarily focused on the scanning functionality, security, and usability of the bike rack. I also brought valuable knowledge to the team since I was the only one who commuted by bike, and thus I was able to streamline some of the design and build processes, like moving to the chain instead of a metal bar. In this photo, I'm on the left working on the Arduino code that handled the scanning system for the rack.",
          "image": "../pics/ipro/me-working.jpg",
          "alt": "me working on arduino at table"
        },
        {
          "id": "build",
          "type": "title",
          "title": "Build"
        },
        {
          "id": "interior",
          "type": "doubleImg",
          "class": "double",
          "caption1": "Above is the interior of the prototype with the Arduino and RFID scanner installed. This setup takes the signal from the scanner and controls a servo motor in the lower section, which operates the locking mechanism.",
          "caption2": "The RFID scanner can be seen here, installed on the top of the lock.",
          "left": "../pics/ipro/interior.JPG",
          "right": "../pics/ipro/scanner.JPG",
          "leftAlt": "interior of prototype",
          "rightAlt": "RFID scanner on top of prototype"
        },
        {
          "id": "mechanism",
          "type": "doubleVid",
          "caption1": "Above is an interior shot of the mechanism functioning when the RFID card is scanned. Something like this is all that would be needed to secure the end of a chain, and could be made to be very strong. This central position was also chosen based on a scaled bike, but could be relocated for locking wheels.",
          "caption2": "Here is the view from the exterior of the bar moving. Ultimately, a semester was too short to see this project grow any more, which was unfortunate because I was excited that there was a possibility this could have actively benefitted the campus and student transportation.",
          "left": "../pics/ipro/mechanism-int.mp4",
          "right": "../pics/ipro/mechanism-ext.mp4",
          "controls": false,
          "autoplay": true,
          "loop": true,
          "muted": true,
          "leftAlt": "internal mechanism activating",
          "rightAlt": "mechanism as seen through lock hole"
        }
      ]
    },

    {
      "id": "cinepod",
      "title": "CinePod",
      "portPic": "./pics/cinepod/pod-button.JPG",
      "alt": "finished pod",
      "style": "dual",
      "colors": {
        "backing": "#f5ecba",
        "button": "#e8ca1d",
        "shadow": "#d6bc27",
        "hover": "#fedf35"
      },
      "detail": [
        {
          "id": "intro",
          "type": "singleImg",
          "class": "single-image",
          "caption": "The CinePod began as an idea from a discussion with my friends about watching movies in the winter. I'm lucky enough to have an old projector and garage that we were able to watch movies on outside the past summer, while staying distanced and masked for safety. We wanted to continue watching into the winter, and thus the idea of some sort of pod was conceived. This project is the result of actually following through on building a wooden pod.",
          "image": "../pics/cinepod/pod.JPG",
          "alt": "3/4 view of finished pod"
        },
        {
          "id": "design",
          "type": "title",
          "title": "Design"
        },
        {
          "id": "cad",
          "type": "doubleImg",
          "class": "double bg",
          "caption1": "Above is a screenshot of the 2x4 frame in CAD, used as an initial mockup. This design was chosen for simplicity and cost, as previous designs for a disassemblable pod were far outside the budget I set myself.",
          "caption2": "The model with walls applied. Being able to model the pod and predict costs was critical to making the build process as simple as possible.",
          "left": "../pics/cinepod/cad-frame.PNG",
          "right": "../pics/cinepod/img01.PNG",
          "leftAlt": "cad model of pod frame",
          "rightAlt": "cad model of finished pod"
        },
        {
          "id": "build",
          "type": "title",
          "title": "Build"
        },
        {
          "id": "frame",
          "type": "doubleImg",
          "class": "double",
          "caption1": "Building the pod base, making use of some scrap wood that was laying around for a central beam. Here some of the internal supports are being glued in place. These supports were primarily to keep me from breaking through the thin plywood floor during a viewing.",
          "caption2": "The floor was then cut to fit the 2x4 posts before the rest of the frame was assembled. The joints of the frame were kept as simple as possible, using corner butt joints and #10 wood screws to connect them. Also pictured here is my friend who assisted me during the build (great guy).",
          "left": "../pics/cinepod/pod-base.JPG",
          "right": "../pics/cinepod/cut.JPG",
          "alt1": "pod base being assembled",
          "alt2": "pod frame completed in real life"
        },
        {
          "id": "wall",
          "type": "singleImg",
          "class": "single-image shadow",
          "caption": "First side wall attached. These were cut from 1/4'' OSB, and were important not only for warmth but also adding structural integrity. They definitely do not provide good insulation, but that's where the space heater comes in.",
          "image": "../pics/cinepod/pod-wall.JPG",
          "alt": "first wall attached to frame"
        },
        {
          "id": "access",
          "type": "title",
          "title": "Access"
        },
        {
          "id": "details",
          "type": "doubleImg",
          "class": "double",
          "caption1": "The door closed. The door is held shut via magnet cabinet latches, which provide a pretty satisfying closing action. Also seen above are the handles on the bottom which make the pod a bit easier to move.",
          "caption2": "The interior has been carpeted, which makes it both more cozy and less noisy. I planned on installing foam insulation and interior plywood walls, but the cost didn't make sense considering how warm it already is.",
          "left": "../pics/cinepod/door-detail.JPG",
          "right": "../pics/cinepod/interior.JPG",
          "leftAlt": "close-up of pod door",
          "rightAlt": "interior of pod with carpet"
        },
        {
          "id": "final",
          "type": "title",
          "title": "Final Result"
        },
        {
          "id": "finished",
          "type": "doubleImg",
          "class": "double",
          "caption1": "The finished pod, from the front. The mask stapled to the side is a hole meant to allow me to speak to my friends (mildy successful).",
          "caption2": "At the moment, the pod is able to reach an internal temperature of about 60 degrees fahrenheit while the exterior temperature is 25, which makes for a very comfortable viewing experience.",
          "left": "../pics/cinepod/pod-front.JPG",
          "right": "../pics/cinepod/temp.JPG",
          "leftAlt": "front of pod",
          "rightAlt": "showing 62 degree interior temp with 25 degree exterior"
        },
        {
          "id": "usage",
          "type": "singleImg",
          "class": "single-image shadow",
          "caption": "The pod in use! I'm pretty happy with how it turned out, as ridiculous of a thing it may be. I've been able to use it six times so far, and it works perfectly in terms of keeping me warm. I will admit that the fact it takes two people to move is perhaps not the most portable of solutions, but my friends had tent-like pods they purchased and were not nearly as warm or spacious. The total cost ended up being about $250, which was a bit more than I wanted to spend.",
          "image": "../pics/cinepod/snow.jpg",
          "alt": "pod outside"
        }
      ]
    },

    {
      "id": "calculator",
      "title": "MIPS Calculator",
      "portPic": "../pics/mips/neg-conv.PNG",
      "alt": "MIPS calculator performing decimal to binary conversion",
      "style": "dual",
      "colors": {
        "backing": "#b5bdf5",
        "button": "#4053de",
        "shadow": "#3544b0",
        "hover": "#5164ef"
      },
      "detail": [
        {
          "id": "intro",
          "type": "singleImg",
          "class": "single-image shadow",
          "caption": "This project was a calculator built in the assembly language MIPS using QtSPIM. It allowed for addition, subtraction, multiplication, division, and conversions between decimal, hex, and binary numbers. I personally enjoyed this project and had some fun doing the ASCII-art design for the interface, which I felt improved the user experience beyond a console line. My calculator also performed more error checking than was necessary, which allowed it to handle negative numbers (not a requirement).",
          "image": "../pics/mips/home.PNG",
          "alt": "home menu for calculator"
        },
        {
          "id": "simple",
          "type": "title",
          "title": "Simple Functions"
        },
        {
          "id": "add-sub",
          "type": "doubleImg",
          "class": "double bg shadow",
          "caption": "Above are examples for addition and subtraction, with a bit of flair in the menu design.",
          "left": "../pics/mips/addition.PNG",
          "right": "../pics/mips/subtraction.PNG",
          "leftAlt": "addition example in calculator",
          "rightAlt": "subtraction example in calculator"
        },
        {
          "id": "mult-div",
          "type": "doubleImg",
          "class": "double bg shadow",
          "caption1": "Above are examples of addition, subtraction, multiplication, and division. Each function is fairly simple, and I added some styling to the selections in terms of the boxes around the words.",
          "caption2": "The most important issue to deal with here was checking that data entered was valid. This was done by dCheck, a function shown below that translated ASCII input into integers, ensuring that the symbols entered were valid.",
          "left": "../pics/mips/multi.PNG",
          "right": "../pics/mips/division.PNG",
          "leftAlt": "multiplication example in calculator",
          "rightAlt": "division example in calculator"
        },
        {
          "id": "input",
          "type": "title",
          "title": "Input Checking"
        },
        {
          "id": "dCheck-code",
          "type": "code",
          "codeSnippet": "dCheck:\n    move $t9, $ra                 # place initial calling address into $t9 for return\n    jal strLen\n    li $t1, 1                     # initialize multiplier\n    li $t4, 10                    # initialize multiplicand\n    li $t5, 0                     # clear return register\n  loop1:\n    addi $a0, $a0, -1             # move back from new line character that was found by strLen    \n    lb $t2, 0($a0)                # load ascii value into $t2\n    beq $t0, 0, return            # end of string found, return to caller\n    beq $t2, 45, negative         # check if character is '-' and jump to negative to check if it is in first position\n    blt $t2, 48, error            # check if non-int\n    bgt $t2, 57, error            # check if value is non-int symbol\n    addi $t3, $t2, -48            # change ascii value to actual value\n    mul $t3, $t3, $t1             # multiply by 10^n where n is decimal position\n    add $t5, $t5, $t3\n    mul $t1, $t1, $t4             # multiply conversion factor by 10\n    addi $t0, $t0, -1             # decrement string length by 1\n    j loop1\n  negative:\n    bne $t0, 1, error\n    li $t1, -1\n    mul $t5, $t5, $t1\n  return:\n    jr $t9                        # return to caller, int value in $t5\n\nstrLen:\n    li $t0, 0                     # set counter to 0\n  loop:\n    lb $t1, 0($a0)                # load character into $t1    \n    beq $t1, 10, fin              # check for newline character\n    addi $a0, $a0, 1              # increment position in string\n    addi $t0, $t0, 1              # increment counter\n    j loop\n  fin:\n    jr $ra                        # return to caller, length in $t0\nerror:\n    beq $t7, 1, errorc            # if flag is set, jump to errorc so conversion menu is printed again\n    li $v0, 4\n    la $a0, str_error\n    syscall\n\n    j start\n\nerrorc:\n    li $t7, 0                     # clear flag\n    li $v0, 4\n    la $a0, str_error\n    syscall                       # print error string\n\n    j conversions\n",
          "caption": "This is input checking function dCheck, which ensures that decimal input is valid for use in the calculator's functions. This was critical in allowing my calculator to work with negative numbers, since I check the first symbol for '-'. Input checking for hex characters was done separately, inside one of the hexadecimal conversion sections."
        },
        {
          "id": "conversions",
          "type": "title",
          "title": "Conversions"
        },
        {
          "id": "conv-example",
          "type": "doubleImg",
          "class": "double bg shadow",
          "caption1": "Above is the conversion menu. This component of the calculator made up the meat of the project, and I was satisfied with my solution because the conversions handle negative numbers as well, which was not a requirement. I also attempted to make the menu as clear as possible, hence the choice to use a more graphical style in the console.",
          "caption2": "Here is an example of a decimal to binary conversion, for the number -56. The result is a 2-bit signed binary number with 32 bits.",
          "left": "../pics/mips/conversions.PNG",
          "right": "../pics/mips/decbin-neg.PNG",
          "leftAlt": "conversion menu in calculator",
          "rightAlt": "decimal to binary conversion example in calculator"
        },
        {
          "id": "conversion-code",
          "type": "code",
          "codeSnippet": "DtoB:\n    li$t7, 1              # set flag for dCheck to run errorc instead of error\n    li $v0, 4\n    la $a0, str_DtoB      # print string asking user for input\n    syscall\n\n    li $v0, 8\n    li $a1, 32\n    la $a0, decimal\n    syscall\n\n    jal dCheck\n    addu $s0, $t5, $0     # store input in s0\n    li $t1, 1             # mask\n    li $t3, 31            # counter\n    li $v0, 4\n    la $a0, str_ans\n    syscall               # print answer string\n\n  loop2:\n    slti $t2, $t3, 0\n    bne $t2, $0, end      # check counter\n    srlv $s1, $s0, $t3    # shift $s0 to get bit you want then and with $t1\n    and $s1, $s1, $t1     # and with mask\n    add $a0, $s1, $0      # put s1 in a0 for printing\n    addi $t3, $t3, -1     # increment counter\n    li $v0, 1             # print integer\n    syscall\n\n    j loop2\n  end:\n    j conversions",
          "caption": "Here is a snippet of the assembly code for the decimal to binary conversions, used for the above example. It uses bitwise operations on the input, which is checked for validity by the function dCheck. In case of an error here, dCheck is told to throw an error that reprints the conversions menu rather than the main menu."
        }
      ]
    },

    {
      "id": "digital",
      "title": "Digital Imaging",
      "portPic": "./pics/digital/digital01.png",
      "alt": "screencap of 3d music video",
      "style": "dual",
      "colors": {
        "backing": "#b5bdf5",
        "button": "#fc036f",
        "shadow": "#c41661",
        "hover": "#ff147f"
      },
      "detail": [
        {
          "id": "intro",
          "type": "video",
          "caption": "For my digital imaging class, my end-of-semester project was a music video for a song I had created. I had never worked in any 3D modelling software, so I wanted to learn the basics and create fitting visuals for my house-styled track.",
          "video": "../pics/digital/digital-video.mp4",
          "controls": true,
          "autoplay": false,
          "alt": "music video for 2014 20 hour"
        }
      ]
    }
]
